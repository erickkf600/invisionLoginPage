[{"C:\\REACT\\invision_login\\src\\reportWebVitals.ts":"1","C:\\REACT\\invision_login\\src\\App.tsx":"2","C:\\REACT\\invision_login\\src\\index.tsx":"3","C:\\REACT\\invision_login\\src\\pages\\Login\\index.tsx":"4","C:\\REACT\\invision_login\\src\\router-config\\lazy-imports.tsx":"5","C:\\REACT\\invision_login\\src\\router-config\\routes.tsx":"6","C:\\REACT\\invision_login\\src\\router-config\\index.tsx":"7","C:\\REACT\\invision_login\\src\\pages\\Login\\LoginForm.tsx":"8","C:\\REACT\\invision_login\\src\\pages\\Login\\Carousel.tsx":"9","C:\\REACT\\invision_login\\src\\router-config\\routes-array.tsx":"10","C:\\REACT\\invision_login\\src\\pages\\Login\\validations.tsx":"11","C:\\REACT\\invision_login\\src\\pages\\Login\\login.action.tsx":"12","C:\\REACT\\invision_login\\src\\pages\\Register\\index.tsx":"13","C:\\REACT\\invision_login\\src\\pages\\Register\\register.action.tsx":"14","C:\\REACT\\invision_login\\src\\pages\\Register\\RegisterForm.tsx":"15","C:\\REACT\\invision_login\\src\\pages\\Register\\validations.tsx":"16"},{"size":425,"mtime":1611781007003,"results":"17","hashOfConfig":"18"},{"size":159,"mtime":1611784674996,"results":"19","hashOfConfig":"18"},{"size":266,"mtime":1611782632691,"results":"20","hashOfConfig":"18"},{"size":453,"mtime":1611877579021,"results":"21","hashOfConfig":"18"},{"size":554,"mtime":1611877299906,"results":"22","hashOfConfig":"18"},{"size":293,"mtime":1611784108313,"results":"23","hashOfConfig":"18"},{"size":490,"mtime":1611784400458,"results":"24","hashOfConfig":"18"},{"size":2672,"mtime":1611878095352,"results":"25","hashOfConfig":"18"},{"size":1256,"mtime":1611872219456,"results":"26","hashOfConfig":"18"},{"size":265,"mtime":1611877329546,"results":"27","hashOfConfig":"18"},{"size":298,"mtime":1611876754327,"results":"28","hashOfConfig":"18"},{"size":68,"mtime":1611875139747,"results":"29","hashOfConfig":"18"},{"size":441,"mtime":1611877641466,"results":"30","hashOfConfig":"18"},{"size":68,"mtime":1611877180493,"results":"31","hashOfConfig":"18"},{"size":3537,"mtime":1611878532109,"results":"32","hashOfConfig":"18"},{"size":362,"mtime":1611878163420,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4q7w7v",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\REACT\\invision_login\\src\\reportWebVitals.ts",[],"C:\\REACT\\invision_login\\src\\App.tsx",[],["69","70"],"C:\\REACT\\invision_login\\src\\index.tsx",[],"C:\\REACT\\invision_login\\src\\pages\\Login\\index.tsx",[],"C:\\REACT\\invision_login\\src\\router-config\\lazy-imports.tsx",[],"C:\\REACT\\invision_login\\src\\router-config\\routes.tsx",[],"C:\\REACT\\invision_login\\src\\router-config\\index.tsx",[],"C:\\REACT\\invision_login\\src\\pages\\Login\\LoginForm.tsx",["71"],"C:\\REACT\\invision_login\\src\\pages\\Login\\Carousel.tsx",["72"],"C:\\REACT\\invision_login\\src\\router-config\\routes-array.tsx",[],"C:\\REACT\\invision_login\\src\\pages\\Login\\validations.tsx",[],"C:\\REACT\\invision_login\\src\\pages\\Login\\login.action.tsx",[],["73","74"],"C:\\REACT\\invision_login\\src\\pages\\Register\\index.tsx",[],"C:\\REACT\\invision_login\\src\\pages\\Register\\register.action.tsx",[],"C:\\REACT\\invision_login\\src\\pages\\Register\\RegisterForm.tsx",["75"],"import React from 'react'\r\nimport { TextField  } from '@material-ui/core'\r\nimport { Link } from \"react-router-dom\"\r\nimport  google from './../../assets/images/Google__G__Logo.svg'\r\nimport { useForm } from \"react-hook-form\"\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport * as validation from './validations'\r\nimport * as actions from './register.action'\r\nimport { LoginInterface } from '../../interfaces/login'\r\n\r\nconst RegisterForm = () =>{\r\n\r\n    const {register, handleSubmit, errors } = useForm<LoginInterface>({\r\n        resolver: yupResolver(validation.loginSchema)\r\n    });\r\n\r\n    return(\r\n        <>\r\n            <h1 className=\"form-wrapper__form-title\">Invision</h1>\r\n            <p className=\"form-wrapper__form-subtitle\">Getting Started</p>\r\n\r\n            <form>\r\n                <div className=\"form-wrapper__form-input-control\">\r\n                    <TextField \r\n                        inputRef={register}\r\n                        name=\"name\"\r\n                        className=\"form-wrapper__form-input-control-input\" \r\n                        label=\"Full name\" \r\n                        error={!!errors.name}\r\n                        type=\"text\"/> \r\n                    <b className=\"form-wrapper__form-input-control-error-msg\">{errors.name?.message}</b>\r\n                </div>\r\n\r\n                <div className=\"form-wrapper__form-input-control\">\r\n                    <TextField \r\n                        inputRef={register}\r\n                        name=\"email\"\r\n                        className=\"form-wrapper__form-input-control-input second\" \r\n                        label=\"User name or Email\" \r\n                        error={!!errors.email}\r\n                        type=\"email\"/> \r\n                    <b className=\"form-wrapper__form-input-control-error-msg\">{errors.email?.message}</b>\r\n                </div>\r\n\r\n                <div className=\"form-wrapper__form-input-control\">\r\n                    <TextField \r\n                        name=\"password\"\r\n                        inputRef={register}\r\n                        className=\"form-wrapper__form-input-control-input second\" \r\n                        label=\"Create a Password\" \r\n                        error={!!errors.password}\r\n                        type=\"password\" /> \r\n                     <b className=\"form-wrapper__form-input-control-error-msg\">{errors.password?.message}</b>\r\n                    <a href=\"\" className=\"form-wrapper__form-input-control-forgot\">Forgot password?</a>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"form-wrapper__form-signin\" onClick={handleSubmit(actions.login)}>Sign up</button>\r\n\r\n                    <p className=\"form-wrapper__form-line\"><span>Or</span></p>\r\n\r\n                    <button  className=\"form-wrapper__form-google\">\r\n                        <img src={google} alt=\"google logo\"/>\r\n                        Sign up with Google\r\n                    </button>\r\n                        \r\n            </form>\r\n\r\n            <small className=\"form-wrapper__form-register form-wrapper__form-register--term\">\r\n                By signing up, you agree to <b> Invision?</b>\r\n                <Link className=\"link\" to=\"\">Terms of Condition </Link>\r\n                and\r\n                <Link className=\"link\" to=\"\"> Privacy Policy</Link>\r\n            </small>\r\n            <small className=\"form-wrapper__form-register\">Alredy on <b> Invision?</b><Link className=\"link\" to=\"/login\">Log In</Link></small>\r\n        </>        \r\n    )\r\n}\r\n\r\nexport default RegisterForm","C:\\REACT\\invision_login\\src\\pages\\Register\\validations.tsx",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":43,"column":21,"nodeType":"82","endLine":43,"endColumn":84},{"ruleId":"83","severity":1,"message":"84","line":5,"column":9,"nodeType":"85","messageId":"86","endLine":5,"endColumn":26},{"ruleId":"76","replacedBy":"87"},{"ruleId":"78","replacedBy":"88"},{"ruleId":"80","severity":1,"message":"81","line":54,"column":21,"nodeType":"82","endLine":54,"endColumn":84},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","@typescript-eslint/no-unused-vars","'resetTimeout' is defined but never used.","Identifier","unusedVar",["89"],["90"],"no-global-assign","no-unsafe-negation"]